#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="municipaliteBD")]
	public partial class projetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAdminCitoyen(AdminCitoyen instance);
    partial void UpdateAdminCitoyen(AdminCitoyen instance);
    partial void DeleteAdminCitoyen(AdminCitoyen instance);
    partial void InsertAdministrateur(Administrateur instance);
    partial void UpdateAdministrateur(Administrateur instance);
    partial void DeleteAdministrateur(Administrateur instance);
    partial void InsertAdresse(Adresse instance);
    partial void UpdateAdresse(Adresse instance);
    partial void DeleteAdresse(Adresse instance);
    partial void InsertCertificat(Certificat instance);
    partial void UpdateCertificat(Certificat instance);
    partial void DeleteCertificat(Certificat instance);
    partial void InsertCitoyen(Citoyen instance);
    partial void UpdateCitoyen(Citoyen instance);
    partial void DeleteCitoyen(Citoyen instance);
    partial void InsertReclamation(Reclamation instance);
    partial void UpdateReclamation(Reclamation instance);
    partial void DeleteReclamation(Reclamation instance);
    #endregion
		
		public projetDataContext() : 
				base(global::WindowsFormsApp1.Properties.Settings.Default.municipaliteBDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminCitoyen> AdminCitoyen
		{
			get
			{
				return this.GetTable<AdminCitoyen>();
			}
		}
		
		public System.Data.Linq.Table<Administrateur> Administrateur
		{
			get
			{
				return this.GetTable<Administrateur>();
			}
		}
		
		public System.Data.Linq.Table<Adresse> Adresse
		{
			get
			{
				return this.GetTable<Adresse>();
			}
		}
		
		public System.Data.Linq.Table<Certificat> Certificat
		{
			get
			{
				return this.GetTable<Certificat>();
			}
		}
		
		public System.Data.Linq.Table<Citoyen> Citoyen
		{
			get
			{
				return this.GetTable<Citoyen>();
			}
		}
		
		public System.Data.Linq.Table<Reclamation> Reclamation
		{
			get
			{
				return this.GetTable<Reclamation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminCitoyen")]
	public partial class AdminCitoyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _login_A;
		
		private int _login_C;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Administrateur> _Administrateur;
		
		private EntityRef<Citoyen> _Citoyen;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlogin_AChanging(int value);
    partial void Onlogin_AChanged();
    partial void Onlogin_CChanging(int value);
    partial void Onlogin_CChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public AdminCitoyen()
		{
			this._Administrateur = default(EntityRef<Administrateur>);
			this._Citoyen = default(EntityRef<Citoyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_A", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int login_A
		{
			get
			{
				return this._login_A;
			}
			set
			{
				if ((this._login_A != value))
				{
					if (this._Administrateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_AChanging(value);
					this.SendPropertyChanging();
					this._login_A = value;
					this.SendPropertyChanged("login_A");
					this.Onlogin_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_C", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int login_C
		{
			get
			{
				return this._login_C;
			}
			set
			{
				if ((this._login_C != value))
				{
					if (this._Citoyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_CChanging(value);
					this.SendPropertyChanging();
					this._login_C = value;
					this.SendPropertyChanged("login_C");
					this.Onlogin_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrateur_AdminCitoyen", Storage="_Administrateur", ThisKey="login_A", OtherKey="login_A", IsForeignKey=true)]
		public Administrateur Administrateur
		{
			get
			{
				return this._Administrateur.Entity;
			}
			set
			{
				Administrateur previousValue = this._Administrateur.Entity;
				if (((previousValue != value) 
							|| (this._Administrateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrateur.Entity = null;
						previousValue.AdminCitoyen.Remove(this);
					}
					this._Administrateur.Entity = value;
					if ((value != null))
					{
						value.AdminCitoyen.Add(this);
						this._login_A = value.login_A;
					}
					else
					{
						this._login_A = default(int);
					}
					this.SendPropertyChanged("Administrateur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_AdminCitoyen", Storage="_Citoyen", ThisKey="login_C", OtherKey="login_C", IsForeignKey=true)]
		public Citoyen Citoyen
		{
			get
			{
				return this._Citoyen.Entity;
			}
			set
			{
				Citoyen previousValue = this._Citoyen.Entity;
				if (((previousValue != value) 
							|| (this._Citoyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Citoyen.Entity = null;
						previousValue.AdminCitoyen.Remove(this);
					}
					this._Citoyen.Entity = value;
					if ((value != null))
					{
						value.AdminCitoyen.Add(this);
						this._login_C = value.login_C;
					}
					else
					{
						this._login_C = default(int);
					}
					this.SendPropertyChanged("Citoyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrateur")]
	public partial class Administrateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _login_A;
		
		private string _password_A;
		
		private string _nom;
		
		private string _prenom;
		
		private string _photo_A;
		
		private EntitySet<AdminCitoyen> _AdminCitoyen;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlogin_AChanging(int value);
    partial void Onlogin_AChanged();
    partial void Onpassword_AChanging(string value);
    partial void Onpassword_AChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void Onphoto_AChanging(string value);
    partial void Onphoto_AChanged();
    #endregion
		
		public Administrateur()
		{
			this._AdminCitoyen = new EntitySet<AdminCitoyen>(new Action<AdminCitoyen>(this.attach_AdminCitoyen), new Action<AdminCitoyen>(this.detach_AdminCitoyen));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_A", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int login_A
		{
			get
			{
				return this._login_A;
			}
			set
			{
				if ((this._login_A != value))
				{
					this.Onlogin_AChanging(value);
					this.SendPropertyChanging();
					this._login_A = value;
					this.SendPropertyChanged("login_A");
					this.Onlogin_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_A", DbType="VarChar(50)")]
		public string password_A
		{
			get
			{
				return this._password_A;
			}
			set
			{
				if ((this._password_A != value))
				{
					this.Onpassword_AChanging(value);
					this.SendPropertyChanging();
					this._password_A = value;
					this.SendPropertyChanged("password_A");
					this.Onpassword_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(50)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo_A", DbType="VarChar(50)")]
		public string photo_A
		{
			get
			{
				return this._photo_A;
			}
			set
			{
				if ((this._photo_A != value))
				{
					this.Onphoto_AChanging(value);
					this.SendPropertyChanging();
					this._photo_A = value;
					this.SendPropertyChanged("photo_A");
					this.Onphoto_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrateur_AdminCitoyen", Storage="_AdminCitoyen", ThisKey="login_A", OtherKey="login_A")]
		public EntitySet<AdminCitoyen> AdminCitoyen
		{
			get
			{
				return this._AdminCitoyen;
			}
			set
			{
				this._AdminCitoyen.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminCitoyen(AdminCitoyen entity)
		{
			this.SendPropertyChanging();
			entity.Administrateur = this;
		}
		
		private void detach_AdminCitoyen(AdminCitoyen entity)
		{
			this.SendPropertyChanging();
			entity.Administrateur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adresse")]
	public partial class Adresse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _numero;
		
		private string _rue;
		
		private string _zone;
		
		private System.Nullable<int> _login_C;
		
		private EntityRef<Citoyen> _Citoyen;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumeroChanging(int value);
    partial void OnnumeroChanged();
    partial void OnrueChanging(string value);
    partial void OnrueChanged();
    partial void OnzoneChanging(string value);
    partial void OnzoneChanged();
    partial void Onlogin_CChanging(System.Nullable<int> value);
    partial void Onlogin_CChanged();
    #endregion
		
		public Adresse()
		{
			this._Citoyen = default(EntityRef<Citoyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rue", DbType="VarChar(50)")]
		public string rue
		{
			get
			{
				return this._rue;
			}
			set
			{
				if ((this._rue != value))
				{
					this.OnrueChanging(value);
					this.SendPropertyChanging();
					this._rue = value;
					this.SendPropertyChanged("rue");
					this.OnrueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="NChar(10)")]
		public string zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_C", DbType="Int")]
		public System.Nullable<int> login_C
		{
			get
			{
				return this._login_C;
			}
			set
			{
				if ((this._login_C != value))
				{
					if (this._Citoyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_CChanging(value);
					this.SendPropertyChanging();
					this._login_C = value;
					this.SendPropertyChanged("login_C");
					this.Onlogin_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_Adresse", Storage="_Citoyen", ThisKey="login_C", OtherKey="login_C", IsForeignKey=true)]
		public Citoyen Citoyen
		{
			get
			{
				return this._Citoyen.Entity;
			}
			set
			{
				Citoyen previousValue = this._Citoyen.Entity;
				if (((previousValue != value) 
							|| (this._Citoyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Citoyen.Entity = null;
						previousValue.Adresse.Remove(this);
					}
					this._Citoyen.Entity = value;
					if ((value != null))
					{
						value.Adresse.Add(this);
						this._login_C = value.login_C;
					}
					else
					{
						this._login_C = default(Nullable<int>);
					}
					this.SendPropertyChanged("Citoyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Certificat")]
	public partial class Certificat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QR_Code;
		
		private string _type;
		
		private System.Nullable<int> _login_C;
		
		private EntityRef<Citoyen> _Citoyen;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQR_CodeChanging(string value);
    partial void OnQR_CodeChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onlogin_CChanging(System.Nullable<int> value);
    partial void Onlogin_CChanged();
    #endregion
		
		public Certificat()
		{
			this._Citoyen = default(EntityRef<Citoyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QR_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QR_Code
		{
			get
			{
				return this._QR_Code;
			}
			set
			{
				if ((this._QR_Code != value))
				{
					this.OnQR_CodeChanging(value);
					this.SendPropertyChanging();
					this._QR_Code = value;
					this.SendPropertyChanged("QR_Code");
					this.OnQR_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NChar(10)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_C", DbType="Int")]
		public System.Nullable<int> login_C
		{
			get
			{
				return this._login_C;
			}
			set
			{
				if ((this._login_C != value))
				{
					if (this._Citoyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_CChanging(value);
					this.SendPropertyChanging();
					this._login_C = value;
					this.SendPropertyChanged("login_C");
					this.Onlogin_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_Certificat", Storage="_Citoyen", ThisKey="login_C", OtherKey="login_C", IsForeignKey=true)]
		public Citoyen Citoyen
		{
			get
			{
				return this._Citoyen.Entity;
			}
			set
			{
				Citoyen previousValue = this._Citoyen.Entity;
				if (((previousValue != value) 
							|| (this._Citoyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Citoyen.Entity = null;
						previousValue.Certificat.Remove(this);
					}
					this._Citoyen.Entity = value;
					if ((value != null))
					{
						value.Certificat.Add(this);
						this._login_C = value.login_C;
					}
					else
					{
						this._login_C = default(Nullable<int>);
					}
					this.SendPropertyChanged("Citoyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Citoyen")]
	public partial class Citoyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _login_C;
		
		private string _password_C;
		
		private System.Nullable<int> _code;
		
		private string _nom;
		
		private string _prenom;
		
		private System.Nullable<System.DateTime> _date_de_naissance;
		
		private string _adresse_email;
		
		private string _photo_C;
		
		private string _fonction;
		
		private EntitySet<AdminCitoyen> _AdminCitoyen;
		
		private EntitySet<Adresse> _Adresse;
		
		private EntitySet<Certificat> _Certificat;
		
		private EntitySet<Reclamation> _Reclamation;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlogin_CChanging(int value);
    partial void Onlogin_CChanged();
    partial void Onpassword_CChanging(string value);
    partial void Onpassword_CChanged();
    partial void OncodeChanging(System.Nullable<int> value);
    partial void OncodeChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void Ondate_de_naissanceChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_de_naissanceChanged();
    partial void Onadresse_emailChanging(string value);
    partial void Onadresse_emailChanged();
    partial void Onphoto_CChanging(string value);
    partial void Onphoto_CChanged();
    partial void OnfonctionChanging(string value);
    partial void OnfonctionChanged();
    #endregion
		
		public Citoyen()
		{
			this._AdminCitoyen = new EntitySet<AdminCitoyen>(new Action<AdminCitoyen>(this.attach_AdminCitoyen), new Action<AdminCitoyen>(this.detach_AdminCitoyen));
			this._Adresse = new EntitySet<Adresse>(new Action<Adresse>(this.attach_Adresse), new Action<Adresse>(this.detach_Adresse));
			this._Certificat = new EntitySet<Certificat>(new Action<Certificat>(this.attach_Certificat), new Action<Certificat>(this.detach_Certificat));
			this._Reclamation = new EntitySet<Reclamation>(new Action<Reclamation>(this.attach_Reclamation), new Action<Reclamation>(this.detach_Reclamation));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_C", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int login_C
		{
			get
			{
				return this._login_C;
			}
			set
			{
				if ((this._login_C != value))
				{
					this.Onlogin_CChanging(value);
					this.SendPropertyChanging();
					this._login_C = value;
					this.SendPropertyChanged("login_C");
					this.Onlogin_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_C", DbType="VarChar(50)")]
		public string password_C
		{
			get
			{
				return this._password_C;
			}
			set
			{
				if ((this._password_C != value))
				{
					this.Onpassword_CChanging(value);
					this.SendPropertyChanging();
					this._password_C = value;
					this.SendPropertyChanged("password_C");
					this.Onpassword_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int")]
		public System.Nullable<int> code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(50)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[date de naissance]", Storage="_date_de_naissance", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_de_naissance
		{
			get
			{
				return this._date_de_naissance;
			}
			set
			{
				if ((this._date_de_naissance != value))
				{
					this.Ondate_de_naissanceChanging(value);
					this.SendPropertyChanging();
					this._date_de_naissance = value;
					this.SendPropertyChanged("date_de_naissance");
					this.Ondate_de_naissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[adresse email]", Storage="_adresse_email", DbType="VarChar(50)")]
		public string adresse_email
		{
			get
			{
				return this._adresse_email;
			}
			set
			{
				if ((this._adresse_email != value))
				{
					this.Onadresse_emailChanging(value);
					this.SendPropertyChanging();
					this._adresse_email = value;
					this.SendPropertyChanged("adresse_email");
					this.Onadresse_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo_C", DbType="VarChar(50)")]
		public string photo_C
		{
			get
			{
				return this._photo_C;
			}
			set
			{
				if ((this._photo_C != value))
				{
					this.Onphoto_CChanging(value);
					this.SendPropertyChanging();
					this._photo_C = value;
					this.SendPropertyChanged("photo_C");
					this.Onphoto_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fonction", CanBeNull=false)]
		public string fonction
		{
			get
			{
				return this._fonction;
			}
			set
			{
				if ((this._fonction != value))
				{
					this.OnfonctionChanging(value);
					this.SendPropertyChanging();
					this._fonction = value;
					this.SendPropertyChanged("fonction");
					this.OnfonctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_AdminCitoyen", Storage="_AdminCitoyen", ThisKey="login_C", OtherKey="login_C")]
		public EntitySet<AdminCitoyen> AdminCitoyen
		{
			get
			{
				return this._AdminCitoyen;
			}
			set
			{
				this._AdminCitoyen.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_Adresse", Storage="_Adresse", ThisKey="login_C", OtherKey="login_C")]
		public EntitySet<Adresse> Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				this._Adresse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_Certificat", Storage="_Certificat", ThisKey="login_C", OtherKey="login_C")]
		public EntitySet<Certificat> Certificat
		{
			get
			{
				return this._Certificat;
			}
			set
			{
				this._Certificat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_Reclamation", Storage="_Reclamation", ThisKey="login_C", OtherKey="login_C")]
		public EntitySet<Reclamation> Reclamation
		{
			get
			{
				return this._Reclamation;
			}
			set
			{
				this._Reclamation.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminCitoyen(AdminCitoyen entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = this;
		}
		
		private void detach_AdminCitoyen(AdminCitoyen entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = null;
		}
		
		private void attach_Adresse(Adresse entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = this;
		}
		
		private void detach_Adresse(Adresse entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = null;
		}
		
		private void attach_Certificat(Certificat entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = this;
		}
		
		private void detach_Certificat(Certificat entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = null;
		}
		
		private void attach_Reclamation(Reclamation entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = this;
		}
		
		private void detach_Reclamation(Reclamation entity)
		{
			this.SendPropertyChanging();
			entity.Citoyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reclamation")]
	public partial class Reclamation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _code_R;
		
		private string _details;
		
		private string _pieces_jointes;
		
		private System.Nullable<int> _login_C;
		
		private EntityRef<Citoyen> _Citoyen;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncode_RChanging(int value);
    partial void Oncode_RChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Onpieces_jointesChanging(string value);
    partial void Onpieces_jointesChanged();
    partial void Onlogin_CChanging(System.Nullable<int> value);
    partial void Onlogin_CChanged();
    #endregion
		
		public Reclamation()
		{
			this._Citoyen = default(EntityRef<Citoyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_R", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int code_R
		{
			get
			{
				return this._code_R;
			}
			set
			{
				if ((this._code_R != value))
				{
					this.Oncode_RChanging(value);
					this.SendPropertyChanging();
					this._code_R = value;
					this.SendPropertyChanged("code_R");
					this.Oncode_RChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(50)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[pieces jointes]", Storage="_pieces_jointes", DbType="VarChar(50)")]
		public string pieces_jointes
		{
			get
			{
				return this._pieces_jointes;
			}
			set
			{
				if ((this._pieces_jointes != value))
				{
					this.Onpieces_jointesChanging(value);
					this.SendPropertyChanging();
					this._pieces_jointes = value;
					this.SendPropertyChanged("pieces_jointes");
					this.Onpieces_jointesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_C", DbType="Int")]
		public System.Nullable<int> login_C
		{
			get
			{
				return this._login_C;
			}
			set
			{
				if ((this._login_C != value))
				{
					if (this._Citoyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_CChanging(value);
					this.SendPropertyChanging();
					this._login_C = value;
					this.SendPropertyChanged("login_C");
					this.Onlogin_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citoyen_Reclamation", Storage="_Citoyen", ThisKey="login_C", OtherKey="login_C", IsForeignKey=true)]
		public Citoyen Citoyen
		{
			get
			{
				return this._Citoyen.Entity;
			}
			set
			{
				Citoyen previousValue = this._Citoyen.Entity;
				if (((previousValue != value) 
							|| (this._Citoyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Citoyen.Entity = null;
						previousValue.Reclamation.Remove(this);
					}
					this._Citoyen.Entity = value;
					if ((value != null))
					{
						value.Reclamation.Add(this);
						this._login_C = value.login_C;
					}
					else
					{
						this._login_C = default(Nullable<int>);
					}
					this.SendPropertyChanged("Citoyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
